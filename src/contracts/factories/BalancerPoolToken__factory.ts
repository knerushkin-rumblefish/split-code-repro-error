/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerPoolToken,
  BalancerPoolTokenInterface,
} from "../BalancerPoolToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162000eed38038062000eed833981810160405260608110156200005c57600080fd5b81019080805160405193929190846401000000008211156200007d57600080fd5b9083019060208201858111156200009357600080fd5b8251640100000000811182820188101715620000ae57600080fd5b82525081516020918201929091019080838360005b83811015620000dd578181015183820152602001620000c3565b50505050905090810190601f1680156200010b5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012f57600080fd5b9083019060208201858111156200014557600080fd5b82516401000000008111828201881017156200016057600080fd5b82525081516020918201929091019080838360005b838110156200018f57818101518382015260200162000175565b50505050905090810190601f168015620001bd5780820380516001836020036101000a031916815260200191505b50604081815260209283015182820190915260018252603160f81b838301528651909450869350839283918791620001fb9160039185019062000275565b5080516200021190600490602084019062000275565b505060058054601260ff19909116179055508151602092830120608052805191012060a052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260601b6001600160601b0319166101005250620003119050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002b857805160ff1916838001178555620002e8565b82800160010185558215620002e8579182015b82811115620002e8578251825591602001919060010190620002cb565b50620002f6929150620002fa565b5090565b5b80821115620002f65760008155600101620002fb565b60805160a05160c05160e0516101005160601c610b99620003546000398061057052508061066d52508061090b52508061094d52508061092c5250610b996000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806306fdde03146100d5578063095ea7b31461015257806318160ddd1461019257806323b872dd146101ac578063313ce567146101e25780633644e51514610200578063395093511461020857806340c10f191461023457806370a08231146102625780637ecebe00146102885780638d928af8146102ae57806395d89b41146102d2578063a457c2d7146102da578063a9059cbb14610306578063d505accf14610332578063dd62ed3e14610383575b600080fd5b6100dd6103b1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101175781810151838201526020016100ff565b50505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017e6004803603604081101561016857600080fd5b506001600160a01b038135169060200135610447565b604080519115158252519081900360200190f35b61019a61045d565b60408051918252519081900360200190f35b61017e600480360360608110156101c257600080fd5b506001600160a01b03813581169160208101359091169060400135610463565b6101ea6104d7565b6040805160ff9092168252519081900360200190f35b61019a6104e0565b61017e6004803603604081101561021e57600080fd5b506001600160a01b0381351690602001356104ef565b6102606004803603604081101561024a57600080fd5b506001600160a01b03813516906020013561052a565b005b61019a6004803603602081101561027857600080fd5b50356001600160a01b0316610538565b61019a6004803603602081101561029e57600080fd5b50356001600160a01b0316610553565b6102b661056e565b604080516001600160a01b039092168252519081900360200190f35b6100dd610592565b61017e600480360360408110156102f057600080fd5b506001600160a01b0381351690602001356105f3565b61017e6004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610631565b610260600480360360e081101561034857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561063e565b61019a6004803603604081101561039957600080fd5b506001600160a01b03813581169160200135166107ae565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b5050505050905090565b60006104543384846107c1565b50600192915050565b60025490565b60008061047085336107ae565b9050610494336001600160a01b038716148061048c5750838210155b61019e610823565b61049f858585610831565b336001600160a01b038616148015906104ba57506000198114155b156104cc576104cc85338584036107c1565b506001949350505050565b60055460ff1690565b60006104ea610907565b905090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161045491859061052590866109c5565b6107c1565b61053482826109d7565b5050565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561043d5780601f106104125761010080835404028352916020019161043d565b60008061060033856107ae565b905080831061061a57610615338560006107c1565b610627565b61062733858584036107c1565b5060019392505050565b6000610454338484610831565b61064c8442111560d1610823565b6001600160a01b0380881660008181526006602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120906106d882610a5a565b9050600060018288888860405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610736573d6000803e3d6000fd5b5050604051601f190151915061077890506001600160a01b0382161580159061077057508b6001600160a01b0316826001600160a01b0316145b6101f8610823565b6001600160a01b038b1660009081526006602052604090206001850190556107a18b8b8b6107c1565b5050505050505050505050565b60006107ba8383610aa6565b9392505050565b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b816105345761053481610ad1565b6108486001600160a01b0384161515610198610823565b61085f6001600160a01b0383161515610199610823565b61086a838383610b24565b6001600160a01b03831660009081526020819052604090205461089090826101a0610b29565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108bf90826109c5565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610b4483398151915292918290030190a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610974610b3f565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b60008282016107ba8482101583610823565b6109e360008383610b24565b6002546109f090826109c5565b6002556001600160a01b038216600090815260208190526040902054610a1690826109c5565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610b448339815191529281900390910190a35050565b6000610a64610907565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b505050565b6000610b388484111583610823565b5050900390565b469056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220149211fe777c01f450cadf101fedf63bbd672c152d6dad4e5a880a1ce322075f64736f6c63430007010033";

export class BalancerPoolToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenName: string,
    tokenSymbol: string,
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalancerPoolToken> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      vault,
      overrides || {}
    ) as Promise<BalancerPoolToken>;
  }
  getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenName,
      tokenSymbol,
      vault,
      overrides || {}
    );
  }
  attach(address: string): BalancerPoolToken {
    return super.attach(address) as BalancerPoolToken;
  }
  connect(signer: Signer): BalancerPoolToken__factory {
    return super.connect(signer) as BalancerPoolToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerPoolTokenInterface {
    return new utils.Interface(_abi) as BalancerPoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerPoolToken {
    return new Contract(address, _abi, signerOrProvider) as BalancerPoolToken;
  }
}
