/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StableOracleMathLibrary,
  StableOracleMathLibraryInterface,
} from "../StableOracleMathLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amplificationParameter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceY",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "logBptTotalSupply",
        type: "int256",
      },
    ],
    name: "calcLogPrices",
    outputs: [
      {
        internalType: "int256",
        name: "logSpotPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amplificationParameter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceY",
        type: "uint256",
      },
    ],
    name: "calcSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610dbd610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80632d3f8a3214610045578063436f9be41461008d575b600080fd5b6100746004803603608081101561005b57600080fd5b50803590602081013590604081013590606001356100c8565b6040805192835260208301919091528051918290030190f35b6100b6600480360360608110156100a357600080fd5b508035906020810135906040013561011f565b60408051918252519081900360200190f35b6000806100ed6040518060600160405280602d8152602001610d5b602d913986610136565b60006100fa878787610234565b905061010881878787610411565b91506101138161043c565b92505094509492505050565b600061012c848484610234565b90505b9392505050565b61023082826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610181578181015183820152602001610169565b50505050905090810190601f1680156101ae5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052935061047e92505050565b5050565b60006102746040518060400160405280601081526020017f537461626c654f7261636c654d6174680000000000000000000000000000000081525061049f565b600061028b856102848686610594565b60016105ee565b90506102af6040518060600160405280602a8152602001610d31602a913986610136565b60408051808201909152601581527f537461626c654f7261636c654d6174682061202573000000000000000000000060208201526103e86002870204906102f69082610136565b600061030c836103068585610648565b90610675565b905061034d6040518060400160405280601581526020017f537461626c654f7261636c654d6174682062202573000000000000000000000081525082610136565b600061036686610360856002028a610648565b9061068b565b90506103a76040518060400160405280601881526020017f537461626c654f7261636c654d6174682061787932202573000000000000000081525082610136565b60006103ce6103b6848961068b565b6103066103c78a610360898d610648565b85906106b7565b905060006103f76103df858b61068b565b6103066103f08c6103608a8f610648565b86906106b7565b905061040382826106c9565b9a9950505050505050505050565b6000806104216103f08786610720565b9050600061042e8261043c565b939093039695505050505050565b6000806104488361077a565b9050600080821361046157652d79883d2000820361046b565b652d79883d200082015b655af3107a40009005925050505b919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610591816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156104e35781810151838201526020016104cb565b50505050905090810190601f1680156105105780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052925061047e915050565b50565b604080516002808252606080830184529260208301908036833701905050905082816000815181106105c257fe5b60200260200101818152505081816001815181106105dc57fe5b60200260200101818152505092915050565b81516000908190815b8181101561062f5761062586828151811061060e57fe5b6020026020010151846106b790919063ffffffff16565b92506001016105f7565b50816106405760009250505061012f565b50905061012f565b600082820261066c84158061066557508385838161066257fe5b04145b600361084b565b90505b92915050565b600061068583831115600161084b565b50900390565b60008282026106a584158061066557508385838161066257fe5b670de0b6b3a764000090049392505050565b600082820161066c848210158361084b565b60006106d8821515600461084b565b826106e55750600061066f565b670de0b6b3a764000083810290610708908583816106ff57fe5b0414600561084b565b82600182038161071457fe5b0460010191505061066f565b600082820261073a84158061066557508385838161066257fe5b8061074957600091505061066f565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201610714565b600061078a60008313606461084b565b670c7d713b49da0000821380156107a85750670f43fc2c04ee000082125b156107ce57670de0b6b3a76400006107bf83610859565b816107c657fe5b059050610479565b6107d782610990565b9050610479565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b8161023057610230816107de565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000850102816108a557fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156109cd576109c3826ec097ce7bc90715b34b9f1000000000816109bd57fe5b05610990565b6000039050610479565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c00000000000008312610a1e57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312610a56576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312610a9e576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312610ad9576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312610b1057693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312610b4757690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312610b7c5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb417461211108312610ba757680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312610bdc576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312610c11576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312610c45576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312610c79576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281610c9c57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b82050160020260648582010597965050505050505056fe537461626c654f7261636c654d61746820616d706c696669636174696f6e506172616d657465722025736c6f67427074546f74616c537570706c79202573202c20616d706c696669636174696f6e506172616d65746572a2646970667358221220c4aa366f75b5125b1123a48ce6fca0f2c957ec4a8c01f556800f2f08a7aa5d0d64736f6c63430007010033";

export class StableOracleMathLibrary__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StableOracleMathLibrary> {
    return super.deploy(overrides || {}) as Promise<StableOracleMathLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StableOracleMathLibrary {
    return super.attach(address) as StableOracleMathLibrary;
  }
  connect(signer: Signer): StableOracleMathLibrary__factory {
    return super.connect(signer) as StableOracleMathLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableOracleMathLibraryInterface {
    return new utils.Interface(_abi) as StableOracleMathLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StableOracleMathLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StableOracleMathLibrary;
  }
}
